name: Deploy Locally (Self-Hosted)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

concurrency:
  group: deploy-local
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: self-hosted   # your self-hosted runner
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build image
        run: docker build -t ci-cd-dashboard:latest .

      - name: Stop existing container (if any)
        run: |
          if docker ps --format '{{.Names}}' | grep -q '^ci-cd-dashboard$'; then
            docker stop ci-cd-dashboard && docker rm ci-cd-dashboard
          elif docker ps -a --format '{{.Names}}' | grep -q '^ci-cd-dashboard$'; then
            docker rm ci-cd-dashboard
          fi

      - name: Run container on port 81
        run: docker run -d --name ci-cd-dashboard -p 81:80 ci-cd-dashboard:latest

      - name: Health check
        run: |
          sleep 2
          curl -I http://localhost:81 || true

      - name: Print URL
        run: echo "App is available at http://localhost:81"

      - name: Notify Slack - Success
        if: success()
        run: |
        curl -X POST -H 'Content-type: application/json' \
         --data "{
          \"text\": \":white_check_mark: *Build Succeeded!*\n
          *Job ID:* ${{ github.run_id }}\n
          *Repository:* ${{ github.repository }}\n
          *Branch:* ${{ github.ref_name }}\n
          *Commit:* ${{ github.sha }}\n
          *Workflow:* ${{ github.workflow }}\n
          *Actor:* ${{ github.actor }}
          \"}" \
        ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Notify Slack - Failure
        if: failure()
        run: |
        curl -X POST -H 'Content-type: application/json' \
        --data "{
          \"text\": \":x: *Build Failed!*\n
          *Job ID:* ${{ github.run_id }}\n
          *Repository:* ${{ github.repository }}\n
          *Branch:* ${{ github.ref_name }}\n
          *Commit:* ${{ github.sha }}\n
          *Workflow:* ${{ github.workflow }}\n
          *Actor:* ${{ github.actor }}
          \"}" \
        ${{ secrets.SLACK_WEBHOOK_URL }}
